name: Publish Release

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths-ignore: 
      - .github/workflows/*
      - README.md
      - assets/*

jobs:
  linter:
    name: Linter Code
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v2
      - name: Set up Python environment
        uses: actions/setup-python@v1
        with:
          python-version: "3.8"
      - name: flake8 Lint
        uses: py-actions/flake8@v1
  deps:
    name: Install dependencies
    needs: linter
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v2
        if: startsWith(runner.os, 'Windows')
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./requirements.txt -t ./lib
      - uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: .
  package:
    name: Package Plugin
    needs: deps
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: artifact
      - name: get version
        id: version
        uses: notiz-dev/github-action-json-property@release
        with: 
          path: 'plugin.json'
          prop_path: 'Version'
      - name: Zip files
        run: |
          zip -r HA-Commander.zip . -x '*.git*' -x 'demo.gif' -x 'README.md' -x 'assets/*'
      - run: echo ${{steps.version.outputs.prop}}
      - name: Publish
        if: success() && github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v1
        with:
          files: 'HA-Commander.zip'
          tag_name: "v${{steps.version.outputs.prop}}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
